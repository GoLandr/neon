var searchIndex = {};
searchIndex["cslice"] = {"doc":"A library of C-slices: slices with a stable ABI for interfacing with C.","items":[[3,"CSlice","cslice","An immutable slice, equivalent to `&'a T`.",null,null],[3,"CMutSlice","","A mutable slice, equivalent to `&'a mut T`.",null,null],[8,"AsCSlice","","A cheap conversion to a `CSlice`.",null,null],[10,"as_c_slice","","Performs the conversion.",0,{"inputs":[{"name":"self"}],"output":{"name":"cslice"}}],[8,"AsCMutSlice","","A cheap conversion to a `CMutSlice`.",null,null],[10,"as_c_mut_slice","","Performs the conversion.",1,{"inputs":[{"name":"self"}],"output":{"name":"cmutslice"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"cslice"}}],[11,"new","","Create a `CSlice` from raw data.",2,null],[11,"as_ptr","","Produces a raw pointer to the slice's buffer.",2,null],[11,"len","","Returns the number of elements in the slice.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_ref","","",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"cmutslice"}}],[11,"new","","Create a `CSlice` from raw data.",3,null],[11,"as_ptr","","Produces a raw pointer to the slice's buffer.",3,null],[11,"as_mut_ptr","","Produces a raw pointer to the slice's buffer.",3,null],[11,"as_slice","","A cheap conversion to a Rust slice. This is slightly more general than `as_ref`.",3,null],[11,"as_mut_slice","","A cheap conversion to a mutable Rust slice. This is slightly more general than `as_mut`.",3,null],[11,"len","","Returns the number of elements in the slice.",3,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"as_ref","","",3,null],[11,"as_mut","","",3,null],[11,"index","","",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",3,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}]],"paths":[[8,"AsCSlice"],[8,"AsCMutSlice"],[3,"CSlice"],[3,"CMutSlice"]]};
searchIndex["neon"] = {"doc":"The `neon` crate provides the entire Neon API.","items":[[0,"mem","neon","Types encapsulating handles to managed JavaScript memory.",null,null],[3,"Handle","neon::mem","",null,null],[3,"LockedHandle","","",null,null],[8,"Managed","","",null,null],[10,"to_raw","","",0,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[10,"from_raw","","",0,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"lock","","",1,{"inputs":[{"name":"self"}],"output":{"name":"lockedhandle"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"upcast","","",1,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"is_a","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"check","","",1,{"inputs":[{"name":"self"}],"output":{"name":"jsresult"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",1,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"lockedhandle"}}],[11,"new","","",2,{"inputs":[{"name":"handle"}],"output":{"name":"lockedhandle"}}],[11,"unlock","","",2,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"handle"}}],[11,"expose","","",2,null],[0,"vm","neon","Abstractions representing the JavaScript virtual machine and its control flow.",null,null],[3,"Throw","neon::vm","",null,null],[3,"Module","","",null,null],[12,"exports","","",3,null],[12,"scope","","",3,null],[3,"FunctionCall","","",null,null],[12,"scope","","",4,null],[12,"arguments","","",4,null],[3,"Arguments","","",null,null],[4,"CallKind","","",null,null],[13,"Construct","","",5,null],[13,"Call","","",5,null],[6,"VmResult","","",null,null],[6,"JsResult","","",null,null],[6,"Call","","",null,null],[8,"This","","A type that may be the type of a function's `this` binding.",null,null],[10,"as_this","","",6,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[8,"Lock","","",null,null],[16,"Internals","","",7,null],[11,"grab","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[10,"expose","","",7,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"fmtresult"}}],[11,"description","","",8,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",3,null],[11,"export","","",3,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"callkind"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kind","","",4,{"inputs":[{"name":"self"}],"output":{"name":"callkind"}}],[11,"len","","",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get","","",9,{"inputs":[{"name":"self"},{"name":"u"},{"name":"i32"}],"output":{"name":"option"}}],[11,"require","","",9,{"inputs":[{"name":"self"},{"name":"u"},{"name":"i32"}],"output":{"name":"jsresult"}}],[11,"this","","",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"handle"}}],[11,"callee","","",9,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"handle"}}],[0,"scope","neon","Abstractions for temporarily rooting handles to managed JavaScript memory.",null,null],[3,"RootScope","neon::scope","",null,null],[3,"NestedScope","","",null,null],[3,"ChainedScope","","",null,null],[8,"Scope","","",null,null],[10,"nested","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[10,"chained","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"global","","",10,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"escape","","",11,{"inputs":[{"name":"self"},{"name":"handle"}],"output":{"name":"handle"}}],[11,"nested","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"chained","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"nested","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"chained","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"nested","","",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[11,"chained","","",11,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"t"}}],[0,"js","neon","Types and traits representing JavaScript values.",null,null],[3,"JsValue","neon::js","A JavaScript value of any type.",null,null],[3,"JsUndefined","","The JavaScript `undefined` value.",null,null],[3,"JsNull","","The JavaScript `null` value.",null,null],[3,"JsBoolean","","A JavaScript boolean primitive value.",null,null],[3,"JsString","","A JavaScript string primitive value.",null,null],[3,"JsNumber","","A JavaScript number value.",null,null],[3,"JsObject","","A JavaScript object.",null,null],[3,"JsArray","","A JavaScript array object, i.e. a value for which `Array.isArray` would return `true`.",null,null],[3,"JsFunction","","A JavaScript function object.",null,null],[4,"Variant","","A wrapper type for JavaScript values that makes it convenient to check a value's type dynamically using Rust's pattern-matching.",null,null],[13,"Null","","",14,null],[13,"Undefined","","",14,null],[13,"Boolean","","",14,null],[13,"Number","","",14,null],[13,"String","","",14,null],[13,"Object","","",14,null],[13,"Array","","",14,null],[13,"Function","","",14,null],[13,"Other","","",14,null],[0,"binary","","",null,null],[3,"JsBuffer","neon::js::binary","",null,null],[3,"JsArrayBuffer","","",null,null],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"jsbuffer"}}],[11,"new","","",15,{"inputs":[{"name":"t"},{"name":"u32"}],"output":{"name":"vmresult"}}],[11,"to_raw","","",15,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",15,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"jsarraybuffer"}}],[11,"new","","",16,{"inputs":[{"name":"t"},{"name":"u32"}],"output":{"name":"vmresult"}}],[11,"to_raw","","",16,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",16,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[0,"error","neon::js","",null,null],[3,"JsError","neon::js::error","",null,null],[4,"Kind","","",null,null],[13,"Error","","",17,null],[13,"TypeError","","",17,null],[13,"ReferenceError","","",17,null],[13,"RangeError","","",17,null],[13,"SyntaxError","","",17,null],[5,"throw","","",null,{"inputs":[{"name":"handle"}],"output":{"name":"vmresult"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"jserror"}}],[11,"to_raw","","",18,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",18,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"new","","",18,{"inputs":[{"name":"t"},{"name":"kind"},{"name":"u"}],"output":{"name":"vmresult"}}],[11,"throw","","",18,{"inputs":[{"name":"kind"},{"name":"str"}],"output":{"name":"vmresult"}}],[0,"class","neon::js","",null,null],[3,"ClassDescriptor","neon::js::class","",null,null],[3,"JsClass","","",null,null],[8,"Class","","",null,null],[16,"Internals","","",19,null],[10,"setup","","",19,{"inputs":[{"name":"t"}],"output":{"name":"vmresult"}}],[11,"class","","",19,{"inputs":[{"name":"t"}],"output":{"name":"jsresult"}}],[11,"describe","","",19,{"inputs":[{"name":"str"},{"name":"allocatekernel"}],"output":{"name":"classdescriptor"}}],[11,"new","","",20,{"inputs":[{"name":"str"},{"name":"allocatekernel"}],"output":{"name":"classdescriptor"}}],[11,"call","","",20,{"inputs":[{"name":"self"},{"name":"constructorcallkernel"}],"output":{"name":"self"}}],[11,"construct","","",20,{"inputs":[{"name":"self"},{"name":"constructkernel"}],"output":{"name":"self"}}],[11,"method","","",20,{"inputs":[{"name":"self"},{"name":"str"},{"name":"methodkernel"}],"output":{"name":"self"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"jsclass"}}],[11,"check","","",21,{"inputs":[{"name":"self"},{"name":"handle"},{"name":"str"}],"output":{"name":"jsresult"}}],[11,"constructor","","",21,{"inputs":[{"name":"self"},{"name":"u"}],"output":{"name":"jsresult"}}],[11,"to_raw","","",21,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",21,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[8,"Value","neon::js","The trait shared by all JavaScript values.",null,null],[11,"to_string","","",22,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"jsresult"}}],[11,"as_value","","",22,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handle"}}],[8,"ToJsString","","",null,null],[10,"to_js_string","","",23,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handle"}}],[8,"Key","","A property key in a JavaScript object.",null,null],[10,"get","","",24,{"inputs":[{"name":"self"},{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[10,"set","","",24,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[8,"Object","","The trait of all object types.",null,null],[11,"get","","",25,{"inputs":[{"name":"self"},{"name":"t"},{"name":"k"}],"output":{"name":"vmresult"}}],[11,"get_own_property_names","","",25,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"jsresult"}}],[11,"set","","",25,{"inputs":[{"name":"self"},{"name":"k"},{"name":"handle"}],"output":{"name":"vmresult"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"jsvalue"}}],[11,"to_raw","","",26,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",26,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"as_this","","",26,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"variant","neon::mem","",1,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"clone","neon::js","",27,{"inputs":[{"name":"self"}],"output":{"name":"jsundefined"}}],[11,"new","","",27,{"inputs":[],"output":{"name":"handle"}}],[11,"to_raw","","",27,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",27,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"as_this","","",27,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"jsnull"}}],[11,"new","","",28,{"inputs":[],"output":{"name":"handle"}}],[11,"to_raw","","",28,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",28,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"jsboolean"}}],[11,"new","","",29,{"inputs":[{"name":"t"},{"name":"bool"}],"output":{"name":"handle"}}],[11,"value","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_raw","","",29,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",29,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"jsstring"}}],[11,"to_raw","","",30,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",30,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"size","","",30,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"value","","",30,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"new","","",30,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"option"}}],[11,"new_or_throw","","",30,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"vmresult"}}],[11,"to_js_string","neon::mem","",1,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handle"}}],[11,"clone","neon::js","",31,{"inputs":[{"name":"self"}],"output":{"name":"jsnumber"}}],[11,"new","","",31,{"inputs":[{"name":"t"},{"name":"f64"}],"output":{"name":"handle"}}],[11,"value","","",31,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"to_raw","","",31,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",31,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"jsobject"}}],[11,"to_raw","","",32,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",32,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"as_this","","",32,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"get","neon::mem","",1,{"inputs":[{"name":"self"},{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[11,"set","","",1,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[11,"new","neon::js","",32,{"inputs":[{"name":"t"}],"output":{"name":"handle"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"jsarray"}}],[11,"new","","",33,{"inputs":[{"name":"t"},{"name":"u32"}],"output":{"name":"handle"}}],[11,"to_vec","","",33,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"vmresult"}}],[11,"len","","",33,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"to_raw","","",33,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",33,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"jsfunction"}}],[11,"new","","",34,null],[11,"call","","",34,{"inputs":[{"name":"self"},{"name":"s"},{"name":"handle"},{"name":"as"}],"output":{"name":"jsresult"}}],[11,"construct","","",34,{"inputs":[{"name":"self"},{"name":"s"},{"name":"as"}],"output":{"name":"jsresult"}}],[11,"to_raw","","",34,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"from_raw","","",34,{"inputs":[{"name":"local"}],"output":{"name":"self"}}],[0,"task","neon","A trait for defining Rust tasks to be executed in a background thread.",null,null],[8,"Task","neon::task","A Rust task that can be executed in a background thread.",null,null],[16,"Output","","The task's result type, which is sent back to the main thread to communicate a successful result back to JavaScript.",35,null],[16,"Error","","The task's error type, which is sent back to the main thread to communicate a task failure back to JavaScript.",35,null],[16,"JsEvent","","The type of JavaScript value that gets produced to the asynchronous callback on the main thread after the task is completed.",35,null],[10,"perform","","Perform the task, producing either a successful `Output` or an unsuccessful `Error`. This method is executed in a background thread as part of libuv's built-in thread pool.",35,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"complete","","Convert the result of the task to a JavaScript value to be passed to the asynchronous callback. This method is executed on the main thread at some point after the background task is completed.",35,{"inputs":[{"name":"self"},{"name":"t"},{"name":"result"}],"output":{"name":"jsresult"}}],[11,"schedule","","Schedule a task to be executed on a background thread.",35,{"inputs":[{"name":"self"},{"name":"handle"}],"output":null}],[0,"meta","neon","",null,null],[5,"version","neon::meta","",null,{"inputs":[],"output":{"name":"version"}}],[17,"VERSION","","",null,null],[17,"MAJOR","","",null,null],[17,"MINOR","","",null,null],[17,"PATCH","","",null,null],[17,"BUILD_PROFILE","","",null,null],[14,"register_module","neon","Register the current crate as a Node module, providing startup logic for initializing the module object at runtime.",null,null],[14,"declare_types","","Declare custom native JavaScript types with Rust implementations.",null,null]],"paths":[[8,"Managed"],[3,"Handle"],[3,"LockedHandle"],[3,"Module"],[3,"FunctionCall"],[4,"CallKind"],[8,"This"],[8,"Lock"],[3,"Throw"],[3,"Arguments"],[8,"Scope"],[3,"ChainedScope"],[3,"RootScope"],[3,"NestedScope"],[4,"Variant"],[3,"JsBuffer"],[3,"JsArrayBuffer"],[4,"Kind"],[3,"JsError"],[8,"Class"],[3,"ClassDescriptor"],[3,"JsClass"],[8,"Value"],[8,"ToJsString"],[8,"Key"],[8,"Object"],[3,"JsValue"],[3,"JsUndefined"],[3,"JsNull"],[3,"JsBoolean"],[3,"JsString"],[3,"JsNumber"],[3,"JsObject"],[3,"JsArray"],[3,"JsFunction"],[8,"Task"]]};
searchIndex["neon_runtime"] = {"doc":"","items":[[0,"raw","neon_runtime","Fundamental definitions for mapping to the V8 memory space.",null,null],[3,"Local","neon_runtime::raw","A V8 `Local` handle.",null,null],[12,"handle","","",0,null],[3,"HandleScope","","A V8 `HandleScope`.",null,null],[12,"align_to_pointer","","",1,null],[12,"fields","","",1,null],[3,"EscapableHandleScope","","A V8 `EscapableHandleScope`.",null,null],[12,"align_to_pointer","","",2,null],[12,"fields","","",2,null],[6,"FunctionCallbackInfo","","Represents the details of how the function was called from JavaScript.",null,null],[6,"Isolate","","Represents an instance of the V8 runtime.",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"local"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"handlescope"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"handlescope"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"escapablehandlescope"}}],[11,"new","","",2,{"inputs":[],"output":{"name":"escapablehandlescope"}}],[0,"call","neon_runtime","Facilities for working with `v8::FunctionCallbackInfo` and getting the current `v8::Isolate`.",null,null],[5,"set_return","neon_runtime::call","Sets the return value of the function call.",null,null],[5,"get_isolate","","Gets the isolate of the function call.",null,null],[5,"current_isolate","","Gets the current `v8::Isolate`.",null,null],[5,"is_construct","","Indicates if the function call was invoked as a constructor.",null,null],[5,"this","","Mutates the `out` argument provided to refer to the `v8::Local` handle value of the object the function is bound to.",null,null],[5,"callee","","Mutates the `out` argument provided to refer to the `v8::Local` handle value of the currently executing function.",null,null],[5,"data","","Mutates the `out` argument provided to refer to the `v8::Local` handle value of the `v8::FunctionCallbackInfo` `Data`.",null,null],[5,"len","","Gets the number of arguments passed to the function.",null,null],[5,"get","","Mutates the `out` argument provided to refer to the `v8::Local` handle value of the `i`th argument passed to the function.",null,null],[0,"scope","neon_runtime","Facilities for working with `v8::HandleScope`s and `v8::EscapableHandleScope`s.",null,null],[5,"escape","neon_runtime::scope","Mutates the `out` argument provided to refer to the newly escaped `v8::Local` value.",null,null],[5,"chained","","Creates a `v8::EscapableHandleScope` and calls the `callback` provided with the argument signature `(out, parent_scope, &v8_scope, closure)`.",null,null],[5,"nested","","Creates a `v8::HandleScope` and calls the `callback` provided with the argument signature `(out, realm, closure)`.",null,null],[5,"enter","","Instantiates a new `v8::HandleScope`.",null,null],[5,"exit","","Destructs a `v8::HandleScope`.",null,null],[5,"size","","Gets the size of a `v8::HandleScope`.",null,null],[5,"alignment","","Gets the alignment requirement of a `v8::HandleScope`.",null,null],[5,"escapable_size","","Gets the size of a `v8::EscapableHandleScope`.",null,null],[5,"escapable_alignment","","Gets the alignment requirement of a `v8::EscapableHandleScope`.",null,null],[5,"get_global","","Mutates the `out` argument provided to refer to the `v8::Local` value of the `global` object",null,null],[0,"object","neon_runtime","Facilities for working with `v8::Object`s.",null,null],[5,"new","neon_runtime::object","Mutates the `out` argument provided to refer to a newly created `v8::Object`.",null,null],[5,"get_own_property_names","","Mutates the `out` argument provided to refer to a newly created `v8::Array` containing the names of the `v8::Object`'s own property names. Returns `false` if the result is empty.",null,null],[5,"get_isolate","","Gets the `v8::Isolate` of a `v8::Object`.",null,null],[5,"get_index","","Mutates the `out` argument provided to refer to the `v8::Local` value at the `index` provided of the `v8::Object`. Returns `false` if the result couldn't be retrieved.",null,null],[5,"set_index","","Sets the key value of a `v8::Object` at the `index` provided. Also mutates the `out` argument provided to refer to a `v8::Local` boolean value, `true` if the set was successful.",null,null],[5,"get_string","","Mutates the `out` argument provided to refer to the `v8::Local` value of the `v8::String`'s underlying content.  Returns `false` if the value couldn't be retrieved.",null,null],[5,"set_string","","Sets the underlying content of a `v8::String` object. Also mutates the `out` argument provided to refer to a `v8::Local` boolean value, `true` if the set was successful.",null,null],[5,"get","","Mutates the `out` argument provided to refer to the `v8::Local` value at the `key` provided. Returns `false` if the result couldn't be retrieved.",null,null],[5,"set","","Sets the key value of a `v8::Object` at the `key` provided. Also mutates the `out` argument provided to refer to a `v8::Local` boolean value, `true` if the set was successful.",null,null],[0,"array","neon_runtime","Facilities for working with `v8::Array`s.",null,null],[5,"new","neon_runtime::array","Mutates the `out` argument provided to refer to a newly created `v8::Array`.",null,null],[5,"len","","Gets the length of an `v8::Array`.",null,null],[0,"string","neon_runtime","Facilities for working with `v8::String`s.",null,null],[5,"new","neon_runtime::string","Mutates the `out` argument provided to refer to a newly created `v8::String`. Returns `false` if the value couldn't be created.",null,null],[5,"utf8_len","","Gets the length of a `v8::String`.",null,null],[5,"data","","Writes data to a `v8::String` and returns the number of bytes writen.",null,null],[0,"primitive","neon_runtime","Facilities for working with primitive values.",null,null],[5,"undefined","neon_runtime::primitive","Mutates the `out` argument provided to refer to the `v8::Undefined` object.",null,null],[5,"null","","Mutates the `out` argument provided to refer to the `v8::Null` object.",null,null],[5,"boolean","","Mutates the `out` argument provided to refer to the `v8::Boolean` object.",null,null],[5,"boolean_value","","Gets the underlying value of a `v8::Boolean` object.",null,null],[5,"is_u32","","Indicates if the value is a 32-bit unsigned integer.",null,null],[5,"is_i32","","Indicates if the value is a 32-bit signed integer.",null,null],[5,"number","","Mutates the `out` argument provided to refer to a newly created `v8::Number` object.",null,null],[5,"number_value","","Gets the underlying value of a `v8::Number` object.",null,null],[0,"error","neon_runtime","Facilities for creating and throwing JS errors.",null,null],[5,"throw","neon_runtime::error","Throws an `Error` object in the current context.",null,null],[5,"new_error","","Mutates the `out` argument provided to refer to a newly created `Error` object.",null,null],[5,"new_type_error","","Mutates the `out` argument provided to refer to a newly created `TypeError` object.",null,null],[5,"new_reference_error","","Mutates the `out` argument provided to refer to a newly created `ReferenceError` object.",null,null],[5,"new_range_error","","Mutates the `out` argument provided to refer to a newly created `RangeError` object.",null,null],[5,"new_syntax_error","","Mutates the `out` argument provided to refer to a newly created `SyntaxError` object.",null,null],[5,"throw_error_from_cstring","","Throws an `Error` object in the current context.",null,null],[5,"throw_type_error_from_cstring","","Throws a `TypeError` object in the current context.",null,null],[5,"throw_reference_error_from_cstring","","Throws a `ReferenceError` object in the current context.",null,null],[5,"throw_range_error_from_cstring","","Throws a `RangeError` object in the current context.",null,null],[5,"throw_syntax_error_from_cstring","","Throws a `SyntaxError` object in the current context.",null,null],[0,"arraybuffer","neon_runtime","Facilities for working with `v8::ArrayBuffer`s.",null,null],[5,"new","neon_runtime::arraybuffer","Mutates the `out` argument provided to refer to a newly created `v8::ArrayBuffer` object. Returns `false` if the value couldn't be created.",null,null],[5,"data","","Mutates the `out` argument provided populating the `data` and `len` properties.",null,null],[0,"buffer","neon_runtime","Facilities for working with `node::Buffer`s.",null,null],[5,"new","neon_runtime::buffer","Mutates the `out` argument provided to refer to a newly created `node::Buffer` object. Returns `false` if the value couldn't be created.",null,null],[5,"data","","Mutates the `out` argument provided populating the `data` and `len` properties.",null,null],[0,"tag","neon_runtime","Facilities for identifying the type of a `v8::Local` handle.",null,null],[4,"Tag","neon_runtime::tag","",null,null],[13,"Null","","",3,null],[13,"Undefined","","",3,null],[13,"Boolean","","",3,null],[13,"Number","","",3,null],[13,"String","","",3,null],[13,"Object","","",3,null],[13,"Array","","",3,null],[13,"Function","","",3,null],[13,"Other","","",3,null],[5,"of","","Returns the `Tag` of the value provided.",null,null],[5,"is_undefined","","Indicates if the value type is `Undefined`.",null,null],[5,"is_null","","Indicates if the value type is `Null`.",null,null],[5,"is_number","","Indicates if the value type is `Number`.",null,null],[5,"is_boolean","","Indicates if the value type is `Boolean`.",null,null],[5,"is_string","","Indicates if the value type is `String`.",null,null],[5,"is_object","","Indicates if the value type is `Object`.",null,null],[5,"is_array","","Indicates if the value type is `Array`.",null,null],[5,"is_function","","Indicates if the value type is `Function`.",null,null],[5,"is_error","","Indicates if the value type is `Error`.",null,null],[5,"is_buffer","","Indicates if the value type is `Buffer`.",null,null],[5,"is_arraybuffer","","Indicates if the value type is `ArrayBuffer`.",null,null],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"tag"}],"output":{"name":"bool"}}],[0,"module","neon_runtime","A helper function for initializing a module.",null,null],[5,"exec_kernel","neon_runtime::module","Creates a new `v8::HandleScope` and calls `callback` provided with the argument signature `(kernal, exports, scope)`.",null,null],[5,"get_version","","",null,null],[0,"mem","neon_runtime","A helper function for comparing `v8::Local` handles.",null,null],[5,"same_handle","neon_runtime::mem","Indicates if two `v8::Local` handles are the same.",null,null],[0,"fun","neon_runtime","Facilities for working with `v8::Function`s.",null,null],[5,"new","neon_runtime::fun","Mutates the `out` argument provided to refer to a newly created `v8::Function`. Returns `false` if the value couldn't be created.",null,null],[5,"new_template","","Mutates the `out` argument provided to refer to a newly created `v8::FunctionTemplate`. Returns `false` if the value couldn't be created.",null,null],[5,"exec_kernel","","Creates a new `v8::HandleScope` and calls the `callback` provided with the the argument signature `(info, kernel, scope)`.",null,null],[5,"get_kernel","","Gets the reference to the `v8::Local<v8::External>` handle provided.",null,null],[5,"call","","Calls the function provided (`fun`) and mutates the `out` argument provided to refer to the result of the function call. Returns `false` if the result of the call was empty.",null,null],[5,"construct","","Makes a constructor call to with the function provided (`fun`) and mutates the `out` argument provided to refer to the result of the constructor call. Returns `false` if the result of the call was empty.",null,null],[0,"convert","neon_runtime","Helper functions for converting `v8::Local` values.",null,null],[5,"to_object","neon_runtime::convert","Casts the value provided to a `v8::Object` and mutates the `out` argument provided to refer to `v8::Local` handle of the converted value. Returns `false` if the conversion didn't succeed.",null,null],[5,"to_string","","Casts the value provided to a `v8::String` and mutates the `out` argument provided to refer to `v8::Local` handle of the converted value. Returns `false` if the conversion didn't succeed.",null,null],[0,"class","neon_runtime","",null,null],[5,"get_class_map","neon_runtime::class","",null,null],[5,"set_class_map","","",null,null],[5,"create_base","","",null,null],[5,"set_name","","",null,null],[5,"throw_call_error","","",null,null],[5,"throw_this_error","","",null,null],[5,"add_method","","",null,null],[5,"metadata_to_class","","",null,null],[5,"get_allocate_kernel","","",null,null],[5,"get_construct_kernel","","",null,null],[5,"get_call_kernel","","",null,null],[5,"constructor","","",null,null],[5,"check","","",null,null],[5,"has_instance","","",null,null],[5,"get_instance_internals","","",null,null],[0,"task","neon_runtime","Facilities for running background tasks in the libuv thread pool.",null,null],[5,"schedule","neon_runtime::task","Schedules a background task.",null,null]],"paths":[[3,"Local"],[3,"HandleScope"],[3,"EscapableHandleScope"],[4,"Tag"]]};
searchIndex["semver"] = {"doc":"Semantic version parsing and comparison.","items":[[3,"Version","semver","Represents a version number conforming to the semantic versioning scheme.",null,null],[12,"major","","The major version, to be incremented on incompatible changes.",0,null],[12,"minor","","The minor version, to be incremented when functionality is added in a backwards-compatible manner.",0,null],[12,"patch","","The patch version, to be incremented when backwards-compatible bug fixes are made.",0,null],[12,"pre","","The pre-release version identifier, if one exists.",0,null],[12,"build","","The build metadata, ignored when determining version precedence.",0,null],[3,"VersionReq","","A `VersionReq` is a struct containing a list of predicates that can apply to ranges of version numbers. Matching operations can then be done with the `VersionReq` against a particular version to see if it satisfies some or all of the constraints.",null,null],[4,"Identifier","","An identifier in the pre-release or build metadata.",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[4,"SemVerError","","An error type for this crate",null,null],[13,"ParseError","","An error ocurred while parsing.",2,null],[4,"ReqParseError","","A `ReqParseError` is returned from methods which parse a string into a `VersionReq`. Each enumeration is one of the possible errors that can occur.",null,null],[13,"InvalidVersionRequirement","","The given version requirement is invalid.",3,null],[13,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`, or `^`. Only use one.",3,null],[13,"InvalidSigil","","The sigil you have written is not correct.",3,null],[13,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3,null],[13,"InvalidIdentifier","","There was an error parsing an identifier.",3,null],[13,"MajorVersionRequired","","At least a major version is required.",3,null],[13,"UnimplementedVersionRequirement","","An unimplemented version requirement.",3,null],[13,"DeprecatedVersionRequirement","","This form of requirement is deprecated.",3,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"identifier"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"ordering"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"identifier"}],"output":{"name":"identifier"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"semvererror"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"self"},{"name":"semvererror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"new","","Contructs the simple case without pre or build.",0,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"u64"}],"output":{"name":"version"}}],[11,"parse","","Parse a string into a semver object.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"increment_patch","","Increments the patch number for this Version (Must be mutable)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"increment_minor","","Increments the minor version number for this Version (Must be mutable)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"increment_major","","Increments the major version number for this Version (Must be mutable)",0,{"inputs":[{"name":"self"}],"output":null}],[11,"is_prerelease","","Checks to see if the current Version is in pre-release status",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",0,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"versionreq"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"ordering"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",4,{"inputs":[{"name":"versionreq"}],"output":{"name":"versionreq"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"reqparseerror"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"reqparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"reqparseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",3,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",3,{"inputs":[{"name":"string"}],"output":{"name":"reqparseerror"}}],[11,"any","","`any()` is a factory method which creates a `VersionReq` with no constraints. In other words, any version will match against it.",4,{"inputs":[],"output":{"name":"versionreq"}}],[11,"parse","","`parse()` is the main constructor of a `VersionReq`. It takes a string like `\"^1.2.3\"` and turns it into a `VersionReq` that matches that particular constraint.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"exact","","`exact()` is a factory method which creates a `VersionReq` with one exact constraint.",4,{"inputs":[{"name":"version"}],"output":{"name":"versionreq"}}],[11,"matches","","`matches()` matches a given `Version` against this `VersionReq`.",4,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Version"],[4,"Identifier"],[4,"SemVerError"],[4,"ReqParseError"],[3,"VersionReq"]]};
searchIndex["semver_parser"] = {"doc":"","items":[[0,"version","semver_parser","",null,null],[3,"Version","semver_parser::version","",null,null],[12,"major","","",0,null],[12,"minor","","",0,null],[12,"patch","","",0,null],[12,"pre","","",0,null],[12,"build","","",0,null],[4,"Identifier","","",null,null],[13,"Numeric","","An identifier that's solely numbers.",1,null],[13,"AlphaNumeric","","An identifier with letters and numbers.",1,null],[5,"parse","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"identifier"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"identifier"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"range","semver_parser","",null,null],[3,"VersionReq","semver_parser::range","",null,null],[12,"predicates","","",2,null],[3,"Predicate","","",null,null],[12,"op","","",3,null],[12,"major","","",3,null],[12,"minor","","",3,null],[12,"patch","","",3,null],[12,"pre","","",3,null],[4,"WildcardVersion","","",null,null],[13,"Major","","",4,null],[13,"Minor","","",4,null],[13,"Patch","","",4,null],[4,"Op","","",null,null],[13,"Ex","","",5,null],[13,"Gt","","",5,null],[13,"GtEq","","",5,null],[13,"Lt","","",5,null],[13,"LtEq","","",5,null],[13,"Tilde","","",5,null],[13,"Compatible","","",5,null],[13,"Wildcard","","",5,null],[5,"parse_predicate","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"parse","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"wildcardversion"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"op"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"predicate"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"predicate"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Version"],[4,"Identifier"],[3,"VersionReq"],[3,"Predicate"],[4,"WildcardVersion"],[4,"Op"]]};
initSearch(searchIndex);
